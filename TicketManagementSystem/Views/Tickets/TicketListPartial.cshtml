@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

@*@model IEnumerable<TicketIndexViewModel>*@
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<TicketIndexViewModel>


@using (Html.BeginForm())
{
    <p>
        <a asp-action="AddTicket">Skapa Ärende</a>
    </p>

    <table class="table table-striped table-hover border active" align="center">
        <thead class="text-primary">
            <tr>
                <th class="border-right active">
                    @Html.DisplayNameFor(model => model[0].RefNo)
                    @*@Html.ActionLink(Html.DisplayNameFor(model => model.RefNo), "Index", new { sortorder = ViewBag.RefNoSortParm })*@
                </th>
                <th class="border-right active">
                    @Html.DisplayNameFor(model => model[0].Title)
                    @*@Html.ActionLink(Html.DisplayNameFor(model => model.Title), "Index", new { sortOrder = ViewBag.TitleSortParm })*@
                </th>
                <th class="border-right active">
                    @Html.DisplayNameFor(model => model[0].ProjectName)
                    @*@Html.ActionLink(Html.DisplayNameFor(model => model.ProjectName), "Index", new { sortOrder = ViewBag.ProjectNameSortParm })*@
                </th>
                @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
                {
                    <th class="border-right active">
                        @Html.DisplayNameFor(model => model[0].CompanyName)
                        @*@Html.ActionLink(Html.DisplayNameFor(model => model.ProjectName), "Index", new { sortOrder = ViewBag.ProjectNameSortParm })*@
                    </th>
                }
                <th class="border-right active">
                    @Html.DisplayNameFor(model => model[0].Status)
                    @*@Html.ActionLink(Html.DisplayNameFor(model => model.Status), "Index", new { sortOrder = ViewBag.StatusSortParm })*@
                </th>
                @*}
                    else
                    {
                        <th>
                            @Html.ActionLink(Html.DisplayNameFor(model => model.Status), "Index", new { sortOrder = ViewBag.StatusSortParm })
                        </th>
                    }*@
                <th class="border-right active">
                    @Html.DisplayNameFor(model => model[0].CustomerPriority)
                    @*@Html.ActionLink(Html.DisplayNameFor(model => model.CustomerPriority), "Index", new { sortOrder = ViewBag.CustomerPrioritySortParm })*@
                </th>
                @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
                {
                    <th class="border-right active">
                        @Html.DisplayNameFor(model => model[0].RealPriority)
                        @*@Html.ActionLink(Html.DisplayNameFor(model => model.RealPriority), "Index", new { sortOrder = ViewBag.RealPrioritySortParm })*@
                    </th>
                }
                <th scope="col" colspan="2" class="border-right active">
                    @Html.DisplayNameFor(model => model[0].CreatedDate)
                </th>

                @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
                {
                    <th scope="col" colspan="2" class="border-right active">
                        @Html.DisplayNameFor(model => model[0].DueDate)
                        @*@Html.ActionLink(Html.DisplayNameFor(model => model.DueDate), "index", new { sortorder = ViewBag.DueDateSortParm })*@
                    </th>
                    <th class="border-right active">
                        @Html.DisplayNameFor(model => model[0].UserEmail)

                        @*@Html.ActionLink(Html.DisplayNameFor(model => model.UserEmail), "index", new { sortorder = ViewBag.AssignedToSortParm })*@
                    </th>
                    <th class="border-right active">
                        @Html.DisplayNameFor(model => model[0].HoursSpent)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].ResponseType)
                    </th>
                }
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    @if (User.IsInRole("Customer"))
                    {
                        @if (item.Status == Status.Utkast)
                        {
                            <td class="border-right active">
                                <a asp-action="Edit" asp-controller="Tickets" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.RefNo)</a>
                            </td>
                        }
                        else
                        {
                            <td class="border-right active">
                                <a asp-action="Details" asp-controller="Tickets" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.RefNo)</a>
                            </td>
                        }
                    }
                    else
                    {
                        <td class="border-right active">
                            <a asp-action="Details" asp-controller="Tickets" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.RefNo)</a>
                        </td>
                    }
                    <td class="border-right active">
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td class="border-right active">
                        @Html.DisplayFor(modelItem => item.ProjectName)
                    </td>
                    @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
                    {
                        <td class="border-right active">
                            @Html.DisplayFor(modelItem => item.CompanyName)
                        </td>
                    }
                    <td class="border-right active">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>

                    @*}
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                        }*@

                    @if (User.IsInRole("Customer"))
                    {
                        @if (item.Status == Status.Utkast)
                        {
                            <td class="border-right active" align="center">
                                @Html.DisplayFor(modelItem => item.CustomerPriority)
                            </td>
                        }
                        else
                        {
                            <td class="border-right active" align="center">
                                @Html.DisplayFor(modelItem => item.RealPriority)
                            </td>
                        }
                    }

                    @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
                    {
                        <td class="border-right active" align="center">
                            @Html.DisplayFor(modelItem => item.CustomerPriority)
                        </td>
                        <td class="border-right active" align="center">
                            @Html.DisplayFor(modelItem => item.RealPriority)
                        </td>
                    }

                    @if (item.Status != Status.Utkast)
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                    }
                    else
                    {
                        <td>
                        </td>
                    }


                    @if ((User.IsInRole("Admin") || User.IsInRole("Developer")))
                    {
                        int days = (int)(DateTime.Now - item.CreatedDate).TotalDays;
                        @if ((item.Status == Status.Inskickat) && days >= 1)
                        {
                            string errMsg = "Ärendet har skickats in för " + days.ToString() + " dag(ar) sedan";
                            <td class="border-right active">
                                <button type="button" class="btn  btn-lg" data-placement="right" data-toggle="tooltip" title="@errMsg">
                                    <i class="fa fa-exclamation-circle text-danger"></i>
                                </button>
                            </td>
                        }
                        else
                        {
                            <td class="border-right active">
                            </td>
                        }

                        <td>
                            @Html.DisplayFor(modelItem => item.DueDate)
                        </td>

                        @if ((item.Status == Status.Inskickat || item.Status == Status.Påbörjat) && (item.DueDate < DateTime.Now))
                        {
                            <td class="border-right active">
                                <button type="button" class="btn  btn-lg" data-placement="right" data-toggle="tooltip" title="Förfallodatum har löpt ut!">
                                    <i class="fa fa-exclamation-circle text-danger"></i>
                                </button>
                            </td>
                        }
                        else
                        {
                            <td class="border-right active">
                            </td>
                        }

                    }

                    @*@if (User.IsInRole("Customer"))
                        {
                            @if (item.Status == Status.Påbörjat || item.Status == Status.Avslutat)
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.DueDate)
                                </td>
                            }
                            else
                            {
                                <td>
                                </td>
                            }

                        }*@

                    @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
                    {
                        <td class="border-right active">
                            @Html.DisplayFor(modelItem => item.UserEmail)
                        </td>
                    }

                    @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
                    {
                        @if (item.Status == Status.Avslutat)
                        {
                            <td class="border-right active">

                                @Html.DisplayFor(modelItem => item.HoursSpent)
                            </td>
                        }
                        else
                        {
                            <td class="border-right active">
                            </td>
                        }
                    }
                    @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
                    {
                        @if (item.Status == Status.Avslutat)
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.ResponseType)
                            </td>
                        }
                        else
                        {
                            <td>
                            </td>
                        }
                    }

                </tr>
            }
        </tbody>
    </table>

    <div id="container" style="margin-left: 20px">
        <p></p>
        <p></p>
        <div class="GridPager" style="margin-left: 550px">
            Sida @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            av @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, title = ViewBag.searchTitle, statusSearch = ViewBag.statusSearch, customerPriority = ViewBag.customerPriority, bitoreqPriority = ViewBag.bitoreqPriority, priorityMatch = ViewBag.priorityMatch, companySearch = ViewBag.companySearch, projectSearch = ViewBag.projectSearch, customerCompanyTickets = ViewBag.customerCompanyTickets }))
            @*@Html.PagedListPager(Model, page => Url.Action("Index", new { page, title = ViewBag.searchTitle, statusSearch = (ViewBag.statusSearch == null) ? ViewBag.statusSearch : (int)(ViewBag.statusSearch) }))*@
        </div>
    </div>
}

@if (null != TempData["alertMessage"])
{
    <script type="text/javascript">
        alert("User created successful");

    </script>
}
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });

</script>


@*<link rel="stylesheet" href="css/theme.blue.css" />*@

<!-- load jQuery and tablesorter scripts -->
@*<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js"></script>
    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.9.1/jquery.tablesorter.min.js"></script>

    <script type="/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script type="text/javascript" src="http://mottie.github.io/tablesorter/css/theme.default.css"></script>

    <script src="path/to/jquery.js"></script>
    <script src="js/jquery.tablesorter.min.js"></script>*@

<!-- pager plugin -->
@*<link rel="stylesheet" href="css/jquery.tablesorter.pager.css">
    <script src="js/jquery.tablesorter.pager.js"></script>*@

<!-- choose a theme file -->
@*<link rel="stylesheet" href="/path/to/theme.default.css">*@

<!-- load jQuery and tablesorter scripts -->
@*<script type="text/javascript" src="/path/to/jquery-latest.js"></script>
    <script type="text/javascript" src="/path/to/jquery.tablesorter.js"></script>*@

<!-- tablesorter widgets (optional) -->
@*<script type="text/javascript" src="/path/to/jquery.tablesorter.widgets.js"></script>*@

@*<script type="text/javascript">

        $(function () {
            $('table').tablesorter({ theme: "blue", widthfixed: true, widgets: ["filter", "columns", "zebra"], sortlist: [[0, 0]], widgets: ['zebra'] });
        });

    </script>

    <script type="text/javascript">

        $('table').addClass('tablesorter');

    </script>*@


@*<script>
        $('.mvc-grid').mvcgrid();
    </script>*@
