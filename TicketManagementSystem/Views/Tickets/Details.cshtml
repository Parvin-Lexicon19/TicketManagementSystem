@*@model TicketManagementSystem.Core.Models.Ticket*@
@model TicketManagementSystem.Core.ViewModels.TicketDetailsViewModel
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Details";
    int i = 0;
}

    <h1>Detaljer</h1>

<div>

    <dl class="row">

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.RefNo)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.RefNo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.Title)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.Title)
        </dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.Problem)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.Problem)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.CreatedDate)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.CreatedDate)
        </dd>
    </dl>

    <dl class="row">
        @if (User.IsInRole("Customer"))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ticket.CustomerPriority)
            </dt>
            <dd class="col-sm-4">
                @Html.DisplayFor(model => model.Ticket.RealPriority)
            </dd>
        }
        else
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ticket.CustomerPriority)
            </dt>
            <dd class="col-sm-4">
                @Html.DisplayFor(model => model.Ticket.CustomerPriority)
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.DueDate)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.DueDate)
        </dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.ClosedDate)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.ClosedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.LastUpdated)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.LastUpdated)

        </dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.Project)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.Project.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.CreatedUser)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.CreatedUser.Email)
        </dd>
    </dl>

    <!--If Ticket status not closed. and want to show the Ticket status -->
    @if (Model.Ticket.Status != Status.Stängd)
    {
<dl class="row hidestatus">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Ticket.Status)
    </dt>
    <dd class="col-sm-4">
        @Html.DisplayFor(model => model.Ticket.Status)
    </dd>
    @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
    {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.RealPriority)
        </dt>
    <dd class="col-sm-4">
        @Html.DisplayFor(model => model.Ticket.RealPriority)
    </dd>
    }
</dl>
    }
<dl class="row">

    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Ticket.AssignedUser)
    </dt>
    <dd class="col-sm-4">
        @Html.DisplayFor(model => model.Ticket.AssignedUser.Email)
    </dd>
    @if (User.IsInRole("Admin") || User.IsInRole("Developer") && (Model.Ticket.Status == Status.Stängd)) 
    {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.RealPriority)
        </dt>
        <dd class="col-sm-4">
            @Html.DisplayFor(model => model.Ticket.RealPriority)
        </dd>
    }
</dl>
    <!--If Ticket status is closed show every details.-->
    @if (Model.Ticket.Status == Status.Stängd)
    {
        <dl class="row">

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ticket.ResponseDesc)
            </dt>
            <dd class="col-sm-4">
                @Html.DisplayFor(model => model.Ticket.ResponseDesc)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ticket.ResponseType)
            </dt>
            <dd class="col-sm-4">
                @Html.DisplayFor(model => model.Ticket.ResponseType)
            </dd>

        </dl>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ticket.Status)
            </dt>
            <dd class="col-sm-4">
                @Html.DisplayFor(model => model.Ticket.Status)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ticket.HoursSpent)
            </dt>
            <dd class="col-sm-4">
                @Html.DisplayFor(model => model.Ticket.HoursSpent)
            </dd>
        </dl>
    }
    <!-- If Ticket status is not closed Hide the fields below and show them only when Edit button is clicked .-->


    <dl class="row hide collapse">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.RealPriority)
        </dt>
        <dd class="col-sm-4">
            <div class="row hide collapse">
                <select name="adminPriority" asp-for="@Model.Ticket.RealPriority" asp-items="@Html.GetEnumSelectList<Priority>()" class="form-control RealPriority">
                    <option selected="selected" value="">VerkligPrioritering</option>
                </select>
            </div>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ticket.Status)
        </dt>
        <dd class="col-sm-3">
            <div class="row hide collapse">
                <select id='statusselect' asp-for="@Model.Ticket.Status" asp-items="@(Html.GetEnumSelectList<Status>().Where(x => x.Text!= "Utkast" ))" class="form-control  status">
                    <option selected="selected" value="">Status</option>
                </select>
            </div>
            <p class="text-danger">
                @ViewBag.Statuscheck
            </p>

        </dd>
    </dl>
    <div class="hidden">
        <dl class="row ">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ticket.ResponseType)
            </dt>
            <dd class="col-sm-4">
                <div class="row hide collapse">
                    <select name="ResType" asp-for="@Model.Ticket.ResponseType" asp-items="@(Html.GetEnumSelectList<ResponseType>())" class="form-control  ResType">
                        <option selected="selected" value="">Svarstyp</option>
                    </select>
                </div>
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ticket.HoursSpent)
            </dt>
            <dd class="col-sm-3">
                <input asp-for="Ticket.HoursSpent" class="form-control hours" />
            </dd>
        </dl>

        <dl class="row">

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Ticket.ResponseDesc)
            </dt>
            <dd class="col-sm-4">
                <textarea class="form-control RespDesc" asp-for="Ticket.ResponseDesc" rows="5" id="comment"></textarea>
            </dd>

        </dl>
    </div>

</div>

@if (Model.Documents.Count != 0)
{

    @foreach (var item in Model.Documents)
    {
        <dl class="row">
            @if (i == 0)
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Documents)
                </dt>
            }
            else
            {
                <dt class="col-sm-2">
                </dt>
            }

            <dd class="col-sm-4">
                <a asp-controller="Documents" asp-action="Download" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
            </dd>

        </dl>
        i++;
    }


}
else
{
    <dl class="row">

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Documents)
        </dt>
      

    </dl>
}

<br />
<div>
    @*Show this option only for Admin and Developer Roles|*@
    @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
    {
        <div class="text-center">

            <input type="button" value="Spara" id="Save" class="btn btn-primary hide collapse" />
        </div>
    }
    @if (User.IsInRole("Admin") || User.IsInRole("Developer"))
    {
        @if (Model.Ticket.Status != Status.Stängd)
        {
            <div class="text-center">
                <button class="btn btn-primary center-block" id="SaveEditbtn" data-toggle="collapse" data-target=".hide">Redigera</button>
            </div>

        }
    }
<a asp-action="Index">Tillbaka till listan</a>
    <br />
    <br />
    <span id="msg" class="text-danger"></span>

</div>

<br />
<br />
@if (Model.Ticket.Status != Status.Stängd)
{
    <div class="form-group">
        <!--Button trigger modal-->
        <div>
            <button type="button" id="commentPopUp" class="btn btn-primary" data-toggle="modal" data-target="commentModalCenter">Lägg till kommentar</button>
        </div>
        <br />
        <b><label asp-for="Ticket.Comments" class="control-label"></label></b>
        <div style="height: 55vh; overflow:auto;">
            @await Html.PartialAsync("_CommentsPartial", Model.Ticket.Comments)
        </div>
    </div>

    <!--Modal-->
    <div class="modal fade" id="commentModalCenter" tabindex="-1" role="dialog" aria-labelledby="commentModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Modul för @Model.Ticket.Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @await Html.PartialAsync("CommentModalPopUpPartial", Model.Comment)
                </div>

            </div>
        </div>
    </div>
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

<script type="text/javascript">
$("#commentPopUp").click(function () {
$("#commentModalCenter").modal('show');
});

$("#btnHideModal").click(function () {
$("#commentModalCenter").modal('hide');
});
            @* Toggle between Edit and Save button *@
$("#SaveEditbtn").click(function () {

if ($(this).text() == "Redigera") {
$('.hidestatus').hide();
$('#SaveEditbtn').hide();
}

});
$('#statusselect').on('change', function () {
    var status = $('.status').val();

    if(status == "3"){
        $(".hidden").show();
    } else {
        $(".hidden").hide();
    }
});
$('#Save').click(function () {
var url = "/Tickets/SaveResponse";
var hours = $('.hours').val();
var resType = $('.ResType').val();
var resDesc = $('.RespDesc').val();
var status = $('.status').val();
var relPriority = $('.RealPriority').val();
var idOfTicket = @Model.Ticket.Id;
var isValid = true;

    // Check for changing the Ticket status to 'Closed'.
    if (status == 3) {

        if (hours == "0" || hours== "") {
            alert("Om du är den slutliga biljetten, fyll i timmarna");
            isValid = false;
        }
        else if (resType == "") {
            alert("Om du är den slutande biljetten, välj svarstyp");
            isValid = false;
        }
        else if (resDesc == "") {
            alert("Om du stänger biljetten, ge svarbeskrivning");
            isValid = false;
        }

    }
    // Response Type should be filled only when the status is closed.
    if (resType != "" && status != 3)
    {
        alert("Svarstyp bör endast fyllas när biljettstatusen är stängd!");
        isValid = false;
    }
    // Response Description should be filled only when the status is closed.
    else if (resDesc != "" && status != 3)
    {
        alert("Svarbeskrivning bör endast fyllas när biljettstatusen är stängd!");
        isValid = false;
    }
    // Hours should be 0.
    else if ((hours == "") && status != 3)
    {
        alert("Öppettiderna bör inte vara tomma.");
        isValid = false;
    }
        // Hours should be filled only when the status is changed to closed.
    else if ((hours != "0") && status != 3)
    {
        alert("Öppettider bör endast fyllas när biljettstatusen är stängd!");
        isValid = false;
    }


    // If validation is passed update the Ticket.
    if (isValid == true) {
         $.post(url, { id: idOfTicket, HoursSpent: hours, Status: status, RespDesc: resDesc, RespType: resType, RelPriority: relPriority }, function (data) {

            alert("Biljetten uppdaterades framgångsrikt!!");
            window.location = "/Tickets/Index"

        });
     }
    })


</script>
